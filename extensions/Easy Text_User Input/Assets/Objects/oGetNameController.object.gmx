<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//row of letters
//horizontal row
hrow = 1
//vertical row
vrow = 1
//x position of letters to draw
xx = 32
//y position of letters to draw
yy = 32
//variable to increment yy every time its == 5 and then reset i
i = 1
//iteration of alphabet variable until it reaches 26th character
ii = 1
//name variable
name = ""
alphabet = "abcdefghijklmnopqrstuvwxyz"
//if true will draw uppercase
uppercase = false
//posistion of alphabet variable you have selected and then we pass to name variable
alphapos = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_right) || gamepad_button_check_pressed(0, gp_padr)
{
    //we dont want to keep adding to alphapos if we are at the end of hrow
    if hrow &lt; 5
    {
        alphapos ++
    }
    hrow ++ audio_play_sound(snd_Move, 0, false)
}
if keyboard_check_pressed(vk_left) || gamepad_button_check_pressed(0, gp_padl)
{
    //we dont want to keep subtracting from alphapos if we are at the begining of hrow
    if hrow &gt; 1
    {
        alphapos --
    }
    hrow -- audio_play_sound(snd_Move, 0, false)
}
if keyboard_check_pressed(vk_up) || gamepad_button_check_pressed(0, gp_padu)
{
    //exact same idea here if your at the top of the row then do not decrement alphapos
    if vrow &gt; 1
    {
        alphapos -= 5
    }
    vrow -- audio_play_sound(snd_Move, 0, false)
}
if keyboard_check_pressed(vk_down) || gamepad_button_check_pressed(0, gp_padd)
{
    //exact same idea here if your are at the bottom of the row do not add to alphapos
    vrow ++
    if vrow == 6
    {
        alphapos = 26
    }
    else
    {
        alphapos += 5
    }
    audio_play_sound(snd_Move, 0, false)
}
//uppercase = true when you press shift or RB button else uppercase = false
if keyboard_check_pressed(vk_shift) &amp;&amp; uppercase == false  || gamepad_button_check_pressed(0, gp_shoulderr) &amp;&amp; uppercase == false
{
    uppercase = true
}
else if keyboard_check_pressed(vk_shift)  || gamepad_button_check_pressed(0, gp_shoulderr)
{
    uppercase = false
}
//keep values within a certain limit
if vrow &lt; 6
{
    hrow = clamp(hrow, 1, 5)
}
else
{
    hrow = clamp(hrow, 1, 1)
}
vrow = clamp(vrow, 1, 6)
alphapos = clamp(alphapos, 1, 26)
//add letters to name
if keyboard_check_pressed(vk_enter) || gamepad_button_check_pressed(0, gp_face1)
{
    if uppercase == false
    {
        name += string_char_at(alphabet, alphapos)
    }
    else
    {
        name += string_char_at(string_upper(alphabet), alphapos)
    }
    audio_play_sound(snd_Select, 0, false)
}
//delete characters when player hits backspace or the B button
if keyboard_check_pressed(vk_backspace) || gamepad_button_check_pressed(0, gp_face2)
{
    name = string_delete(name, string_length(name), 1)
    audio_play_sound(snd_Delete, 0, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sAlphabetBorder, 0, 0, 64)
draw_sprite(sNameBorder, 0, 0, 0)
draw_sprite(sBigBoo, 0, 124, 0)
//set font color
draw_set_colour(c_white)
//set font align
draw_set_halign(fa_center)
draw_set_valign(fa_left)
//reset varibles every step
//these varibles will determine where you are drawing the letters
x = 32 //this will be 32 pixels from edge
y = 96 //this will be 96 pixels from top
xx = 32 //same idea here
yy = 96 //same idea here
i = 0
ii = 1
//draw letters
if uppercase == true
{
repeat(26)
{
    //use string_upper to draw alphabet uppercase
    draw_text(xx, yy, string(string_char_at(string_upper(alphabet), ii)))
    xx += 32
    i += 1
    ii += 1
    //if i == 5 we increment yy by 32 pixels and set xx back to 32 pixels and set i back to 0
    if i == 5
    {
        yy += 32
        xx = 32
        i = 0
    }
}
}
else
{
    //else draw normal
    repeat(26)
{
    draw_text(xx, yy, string(string_char_at(alphabet, ii)))
    xx += 32
    i += 1
    ii += 1
    //if i == 5 we increment yy by 32 pixels and set xx back to 32 pixels and set i back to 0
    if i == 5
    {
        yy += 32
        xx = 32
        i = 0
    }
}
}
//draw selector offset may be needed
draw_text(hrow * 32, 64 + vrow * 32, "[  ]")
//draw name
        //make sure name is not over 8 characters
        if string_length(name) &gt; 8
        {
            //if you type more than 3 characters then this copies the first 3 chracters and sets it back to 3 chracters
            name = string_copy(name, 1, 8);
        }
draw_set_halign(fa_left)
draw_set_valign(fa_center)
draw_text(32, 32, name)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
